.d-flex.width700.space_top
  = render partial: 'shared/comment/parent_avatar', locals: { comment: comment }

  .space_left.content_container.comment_name
    - if comment.user.present?
      p #{link_to comment.user.name, user_path(comment.user), class: 'comment_link'}　#{time_ago_in_words(comment.created_at)}前
    - else
      p #{comment.user.name}　#{time_ago_in_words(comment.created_at)}前

    .body-card
      .comment_font
        = comment.body
      
      .d-flex.space_top
        .replies id = "replies_all_#{comment.id}"
          - if comment.replies.present?
            .icon-replies data-comment-id="#{comment.id}"
              .i class="fa-solid fa-caret-down"
              .space_right
                p #{comment.replies.count}件の返信

        .d-flex.align_center.icon id = "comment_reply_button_#{comment.id}" data-comment-id="#{comment.id}"
          .i class="fa-solid fa-reply"
          .font_small
            p 返信
          
          if comment.user == current_user
            .space_left
              = link_to recipe_comment_path(recipe_id: @recipe.id, id: comment.id), method: :delete, data: { turbo_method: :delete, confirm: '本当に削除しますか？' } do
                <i class="fas fa-trash-alt icon_color_side"></i>

    = form_with model: [@recipe, Comment.new], method: :post, id: "comment_replyForm_#{comment.id}", class: "hide", local: true do |f|
        p 返信先 #{comment.user.name}
        .comment_arrangement
          = f.text_area :body, class: 'form-control width80 margin-left-zero' 
          = f.hidden_field :parent_id, value: comment.id, id: "parent_id"
          = f.hidden_field :id
          /= f.hidden_field :child_comment_place, value: "comment_mass_#{comment.id}"
          = f.hidden_field :child_comment_place, value: "comment_mass_#{comment.id}"
          = f.submit '返信', class: 'submit_button'

